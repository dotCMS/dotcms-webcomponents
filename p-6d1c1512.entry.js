import{r as t,c as i,h as s,H as e,g as h}from"./p-ca5d1561.js";import{D as a}from"./p-89c3c2b6.js";import{g as o,n as r,a as n,b as d,c as l,u as c,i as p}from"./p-3163a9f0.js";import{c as u}from"./p-a2039f2e.js";import{g as b,s as f}from"./p-aff2a700.js";const g=class{constructor(s){t(this,s),this.dotValueChange=i(this,"dotValueChange",7),this.dotStatusChange=i(this,"dotStatusChange",7),this.name="",this.label="",this.placeholder="Drop or paste a file or url",this.hint="",this.required=!1,this.requiredMessage="This field is required",this.validationMessage="The field doesn't comply with the specified format",this.URLValidationMessage="The specified URL is not valid",this.disabled=!1,this.accept="",this.maxFileLength="",this.buttonLabel="Browse",this.errorMessage="",this.previewImageName="",this.previewImageUrl="",this.file=null,this.allowedFileTypes=[],this.errorMessageMap=new Map}async reset(){this.file="",this.binaryTextField.value="",this.errorMessage="",this.clearPreviewData(),this.status=o(this.isValid()),this.emitStatusChange(),this.emitValueChange()}async clearValue(){this.binaryTextField.value="",this.errorType=this.required?a.REQUIRED:null,this.setValue(),this.clearPreviewData()}componentWillLoad(){this.setErrorMessageMap(),this.validateProps(),this.status=o(this.isValid()),this.emitStatusChange()}componentDidLoad(){this.binaryTextField=this.el.querySelector("dot-binary-text-field");const t=["dottype"],i=this.el.querySelector('input[type="file"]');setTimeout(()=>{const s=b(Array.from(this.el.attributes),t);f(i,s)},0)}requiredMessageWatch(){this.errorMessageMap.set(a.REQUIRED,this.requiredMessage)}validationMessageWatch(){this.errorMessageMap.set(a.INVALID,this.validationMessage)}URLValidationMessageWatch(){this.errorMessageMap.set(a.URLINVALID,this.URLValidationMessage)}optionsWatch(){let t;this.accept=u(this,"accept"),this.accept&&(t=this.accept.split(","),0===t.length&&(t=[this.accept])),this.allowedFileTypes=t?t.map(t=>t.trim()):[]}fileChangeHandler(t){t.stopImmediatePropagation();const i=t.detail;this.errorType=i.errorType,this.setValue(i.file),this.isBinaryUploadButtonEvent(t.target)&&i.file&&(this.binaryTextField.value=i.file.name)}HandleDragover(t){t.preventDefault(),this.disabled||(this.el.classList.add("dot-dragover"),this.el.classList.remove("dot-dropped"))}HandleDragleave(t){t.preventDefault(),this.el.classList.remove("dot-dragover"),this.el.classList.remove("dot-dropped")}HandleDrop(t){t.preventDefault(),this.el.classList.remove("dot-dragover"),this.disabled||this.previewImageName||(this.el.classList.add("dot-dropped"),this.errorType=null,this.handleDroppedFile(t.dataTransfer.files[0]))}handleDelete(t){t.preventDefault(),this.clearPreviewData(),r(()=>{this.binaryTextField||(this.binaryTextField=this.el.querySelector("dot-binary-text-field"),console.log(this.binaryTextField)),this.setValue()})}render(){const t=n(this.status,this.isValid(),this.required);return s(e,{class:Object.assign({},t)},s("dot-label",{label:this.label,required:this.required,name:this.name,tabindex:"0"},this.previewImageName?s("dot-binary-file-preview",{onClick:t=>{t.preventDefault()},fileName:this.previewImageName,previewUrl:this.previewImageUrl}):s("div",{class:"dot-binary__container"},s("dot-binary-text-field",{placeholder:this.placeholder,required:this.required,disabled:this.disabled,accept:this.allowedFileTypes.join(","),hint:this.hint,onLostFocus:this.lostFocusEventHandler.bind(this)}),s("dot-binary-upload-button",{name:this.name,accept:this.allowedFileTypes.join(","),disabled:this.disabled,required:this.required,buttonLabel:this.buttonLabel}))),l(this.hint),d(this.shouldShowErrorMessage(),this.getErrorMessage()),s("dot-error-message",null,this.errorMessage))}lostFocusEventHandler(){this.status.dotTouched||(this.status=c(this.status,{dotTouched:!0}),this.emitStatusChange())}isBinaryUploadButtonEvent(t){return"dot-binary-upload-button"===t.localName}validateProps(){this.optionsWatch(),this.setPlaceHolder()}shouldShowErrorMessage(){return this.getErrorMessage()&&!this.status.dotPristine}getErrorMessage(){return this.errorMessageMap.get(this.errorType)}isValid(){return!(this.required&&!this.file)}setErrorMessageMap(){this.requiredMessageWatch(),this.validationMessageWatch(),this.URLValidationMessageWatch()}setValue(t=null){try{this.file=t,this.status=c(this.status,{dotTouched:!0,dotPristine:!1,dotValid:this.isValid()}),this.binaryTextField.value=null===t?"":this.binaryTextField.value}catch(i){console.warn(i)}this.emitValueChange(),this.emitStatusChange()}emitStatusChange(){this.dotStatusChange.emit({name:this.name,status:this.status})}emitValueChange(){this.dotValueChange.emit({name:this.name,value:this.file})}handleDroppedFile(t){p(t.name,t.type,this.allowedFileTypes.join(","))?(this.setValue(t),this.binaryTextField.value=t.name):(this.errorType=a.INVALID,this.setValue())}setPlaceHolder(){this.placeholder=this.isWindowsOS()?"Drop a file or url":this.placeholder}isWindowsOS(){return window.navigator.platform.includes("Win")}clearPreviewData(){this.previewImageUrl="",this.previewImageName=""}get el(){return h(this)}static get watchers(){return{requiredMessage:["requiredMessageWatch"],validationMessage:["validationMessageWatch"],URLValidationMessage:["URLValidationMessageWatch"],accept:["optionsWatch"]}}};g.style="dot-binary-file.dot-dragover input{background-color:#f1f1f1}dot-binary-file .dot-binary__container input,dot-binary-file .dot-binary__container button{display:-ms-inline-flexbox;display:inline-flex;border:1px solid lightgray;padding:15px;border-radius:0}dot-binary-file .dot-binary__container input[type=file]{display:none}dot-binary-file .dot-binary__container input{min-width:245px;text-overflow:ellipsis}dot-binary-file .dot-binary__container button{background-color:lightgray}";export{g as dot_binary_file}