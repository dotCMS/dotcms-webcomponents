const e=new RegExp("^\\d\\d\\d\\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"),t=new RegExp("^(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])$");function n(t){return e.test(t)?t:null}function r(e){return t.test(e)?e:null}function o(e){const[t,o]=e?e.split(" "):"";return{date:n(t),time:r(o)||r(t)}}class i extends Error{constructor(e,t){super(`Warning: Invalid prop "${e.name}" of type "${typeof e.value}" supplied to "${e.field.type}" with the name "${e.field.name}", expected "${t}".\nDoc Reference: https://github.com/dotCMS/core-web/blob/master/projects/dotcms-field-elements/src/components/${e.field.type}/readme.md`),this.propInfo=e}getProps(){return Object.assign({},this.propInfo)}}function c(e){if("string"!=typeof e.value)throw new i(e,"string")}const u={date:function(e){if(!n(e.value.toString()))throw new i(e,"Date")},dateRange:function(e){const[t,r]=e.value.toString().split(",");if(!n(t)||!n(r))throw new i(e,"Date");((e,t,n)=>{if(e>t)throw new i(n,"Date")})(new Date(t),new Date(r),e)},dateTime:function(e){if("string"!=typeof e.value)throw new i(e,"Date/Time");if(t=o(e.value),!(n=e.value)||!(n.split(" ").length>1?function(e){return!!e.date&&!!e.time}(t):function(e){return!!e.date||!!e.time}(t)))throw new i(e,"Date/Time");var t,n},number:function(e){if(isNaN(Number(e.value)))throw new i(e,"Number")},options:c,regexCheck:function(e){try{RegExp(e.value.toString())}catch(t){throw new i(e,"valid regular expression")}},step:c,string:c,time:function(e){if(!r(e.value.toString()))throw new i(e,"Time")},type:c,accept:c},s={options:"",regexCheck:"",value:"",min:"",max:"",step:"",type:"text",accept:null};function a(e,t,n){const r=function(e,t){return{value:e[t],name:t,field:{name:e.name,type:e.el.tagName.toLocaleLowerCase()}}}(e,t);try{return function(e,t){e.value&&u[t||e.name](e)}(r,n),e[t]}catch(o){return console.warn(o.message),s[t]}}export{a as c,o as d}